// Generated by view binder compiler. Do not edit!
package com.evcharging.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.evcharging.mobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOperatorDashboardBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RecyclerView recyclerViewTodayBookings;

  @NonNull
  public final TextView tvAvailableSlots;

  @NonNull
  public final TextView tvOccupiedSlots;

  @NonNull
  public final TextView tvStationName;

  @NonNull
  public final TextView tvTotalSlots;

  private FragmentOperatorDashboardBinding(@NonNull ScrollView rootView,
      @NonNull RecyclerView recyclerViewTodayBookings, @NonNull TextView tvAvailableSlots,
      @NonNull TextView tvOccupiedSlots, @NonNull TextView tvStationName,
      @NonNull TextView tvTotalSlots) {
    this.rootView = rootView;
    this.recyclerViewTodayBookings = recyclerViewTodayBookings;
    this.tvAvailableSlots = tvAvailableSlots;
    this.tvOccupiedSlots = tvOccupiedSlots;
    this.tvStationName = tvStationName;
    this.tvTotalSlots = tvTotalSlots;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOperatorDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOperatorDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_operator_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOperatorDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recycler_view_today_bookings;
      RecyclerView recyclerViewTodayBookings = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewTodayBookings == null) {
        break missingId;
      }

      id = R.id.tv_available_slots;
      TextView tvAvailableSlots = ViewBindings.findChildViewById(rootView, id);
      if (tvAvailableSlots == null) {
        break missingId;
      }

      id = R.id.tv_occupied_slots;
      TextView tvOccupiedSlots = ViewBindings.findChildViewById(rootView, id);
      if (tvOccupiedSlots == null) {
        break missingId;
      }

      id = R.id.tv_station_name;
      TextView tvStationName = ViewBindings.findChildViewById(rootView, id);
      if (tvStationName == null) {
        break missingId;
      }

      id = R.id.tv_total_slots;
      TextView tvTotalSlots = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalSlots == null) {
        break missingId;
      }

      return new FragmentOperatorDashboardBinding((ScrollView) rootView, recyclerViewTodayBookings,
          tvAvailableSlots, tvOccupiedSlots, tvStationName, tvTotalSlots);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
