// Generated by view binder compiler. Do not edit!
package com.evcharging.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.evcharging.mobile.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemStationSelectionBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final MaterialButton btnSelectStation;

  @NonNull
  public final TextView tvStationAddress;

  @NonNull
  public final TextView tvStationName;

  @NonNull
  public final TextView tvStationSlots;

  @NonNull
  public final TextView tvStationStatus;

  @NonNull
  public final TextView tvStationType;

  private ItemStationSelectionBinding(@NonNull CardView rootView,
      @NonNull MaterialButton btnSelectStation, @NonNull TextView tvStationAddress,
      @NonNull TextView tvStationName, @NonNull TextView tvStationSlots,
      @NonNull TextView tvStationStatus, @NonNull TextView tvStationType) {
    this.rootView = rootView;
    this.btnSelectStation = btnSelectStation;
    this.tvStationAddress = tvStationAddress;
    this.tvStationName = tvStationName;
    this.tvStationSlots = tvStationSlots;
    this.tvStationStatus = tvStationStatus;
    this.tvStationType = tvStationType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemStationSelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemStationSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_station_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemStationSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_select_station;
      MaterialButton btnSelectStation = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectStation == null) {
        break missingId;
      }

      id = R.id.tv_station_address;
      TextView tvStationAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvStationAddress == null) {
        break missingId;
      }

      id = R.id.tv_station_name;
      TextView tvStationName = ViewBindings.findChildViewById(rootView, id);
      if (tvStationName == null) {
        break missingId;
      }

      id = R.id.tv_station_slots;
      TextView tvStationSlots = ViewBindings.findChildViewById(rootView, id);
      if (tvStationSlots == null) {
        break missingId;
      }

      id = R.id.tv_station_status;
      TextView tvStationStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStationStatus == null) {
        break missingId;
      }

      id = R.id.tv_station_type;
      TextView tvStationType = ViewBindings.findChildViewById(rootView, id);
      if (tvStationType == null) {
        break missingId;
      }

      return new ItemStationSelectionBinding((CardView) rootView, btnSelectStation,
          tvStationAddress, tvStationName, tvStationSlots, tvStationStatus, tvStationType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
